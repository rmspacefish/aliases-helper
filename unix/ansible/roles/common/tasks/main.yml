- name: Update apt package cache
  ansible.builtin.apt:
    update_cache: yes
    force_apt_get: yes
  become_user: root

- name: Activate minimize to dock
  shell: gsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize'

- name: Install generic packages
  ansible.builtin.apt:
    name:
      - zsh
      - tmux
      - xclip
      - cmake
      - make
      - ninja-build
      - python3-pip
    state: present
  become_user: root

- name: Install pipx package
  ansible.builtin.pip:
    name: pipx

- name: Install black
  community.general.pipx:
    name: black

- name: Install generic packages with snap
  community.general.snap:
    name:
      - keepassxc

- name: Install oh-my-zsh
  ansible.builtin.shell:
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

- name: Install starship
  ansible.builtin.shell:
    curl -sS https://starship.rs/install.sh | sh

- name: Check if nvim is already installed
  shell: command -v nvim
  register: nvim_installed
  ignore_errors: yes
- name: Download neovim.appimage
  ansible.builtin.get_url:
    url: https://github.com/neovim/neovim/releases/download/v0.10.1/nvim.appimage
    dest: /tmp/nvim.appimage
    mode: '0755'
  when: nvim_installed is failed
- name: Ensure neovim.appimage is executable
  shell: chmod u+x /tmp/nvim.appimage
  when: nvim_installed is failed
- name: Move neovim.appimage to /usr/local/bin/nvim
  become_user: root
  shell: mv /tmp/nvim.appimage /usr/local/bin/nvim
  when: nvim_installed is failed

- name: check if cargo is installed
  shell: command -v cargo
  register: cargo_exists
  ignore_errors: yes
- name: Download Installer
  when: cargo_exists is failed
  get_url:
    url: https://sh.rustup.rs
    dest: /tmp/sh.rustup.rs
    mode: '0755'
    force: 'yes'
  tags:
    - rust
- name: install rust/cargo
  when: cargo_exists is failed
  shell: /tmp/sh.rustup.rs -y
  tags:
    - rust

- name: Install "ripgrep" Rust package with locked dependencies
  community.general.cargo:
    name: ripgrep
    locked: true

- name: Install "find (fd)" Rust package with locked dependencies
  community.general.cargo:
    name: fd-find
    locked: true

- name: Install "eza" Rust package with locked dependencies
  community.general.cargo:
    name: eza
    locked: true

- name: Install "bat" Rust package with locked dependencies
  community.general.cargo:
    name: bat
    locked: true

- name: Copy configuration files
  ansible.builtin.copy:
    src: "{{ role_path }}/files/{{ item.src }}"
    dest: "/home/{{ ansible_user_id }}/{{ item.dest }}"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: '0644'
  loop:
    - { src: '.zshrc', dest: '.zshrc' }
    - { src: '.bashrc', dest: '.bashrc' }
    - { src: '.tmux.conf', dest: '.tmux.conf' }
